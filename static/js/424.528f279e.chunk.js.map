{"version":3,"file":"static/js/424.528f279e.chunk.js","mappings":"iQAEaA,EAAgBC,EAAAA,QAAAA,GAAH,+GAMbC,EAASD,EAAAA,QAAAA,EAAH,oE,mBCuCnB,EAzCqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAVAC,QAAQC,IAAIH,EAAS,MAErBI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACJN,EAAWM,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIP,QAAQC,IAAIM,EAAMC,QAAtB,GACf,GAAE,CAACb,IAEmB,IAAnBG,EAAQW,QAER,+BACE,+CAMJ,iCACE,wBACGX,GACCA,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAACtB,EAAD,YACE,UAACE,EAAD,yBACckB,EADd,OAC0BE,EAAWC,MAAM,KAAK,OAEhD,uBAAIF,MAJcF,EADV,OAShB,SAAC,EAAAK,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,kMC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,8FAClBF,EAAAA,EAAAA,IAAA,oCACuBC,IACjChB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAHe,mFAAH,qDAMjBC,EAAe,mCAAG,WAAM7B,GAAN,iFAChBwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,oBACuByB,EADvB,oBAEVhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAHa,mFAAH,sDAMfE,EAAY,mCAAG,WAAM9B,GAAN,iFACbwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,4BAC+ByB,EAD/B,oBAEVhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,KAAKG,IAAlB,IAHU,mFAAH,sDAMZvB,EAAe,mCAAG,WAAMR,GAAN,iFAChBwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,4BAC+ByB,EAD/B,oBAEVhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,KAAKI,OAAlB,IAHa,mFAAH,sDAMfC,EAAc,mCAAG,WAAMC,GAAN,iFACfV,EAAAA,EAAAA,IAAA,gCAEgBC,EAFhB,iCAEgDS,EAFhD,gCAIVzB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,KAAKI,OAAlB,IALY,mFAAH,qD","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewElement = styled.li`\n  margin: 15px 0;\n  padding: 5px 30px;\n  background-color: rgba(255, 227, 80, 0.4);\n`;\n\nexport const Author = styled.p`\n  font-weight: 500;\n  margin-bottom: 5px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Author, ReviewElement } from './MovieReviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n  console.log(reviews, 'r');\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(review => {\n        setReviews(review);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return (\n      <>\n        <h1>No reviews yet!</h1>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ul>\n        {reviews &&\n          reviews.map(({ id, author, content, created_at }) => (\n            <ReviewElement key={id}>\n              <Author>\n                Written by {author} on {created_at.split('T')[0]}\n              </Author>\n              <p>{content}</p>\n            </ReviewElement>\n          ))}\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fe4b88b6e68a30f89cb8b35af00ef551';\n\nexport const getMovieTrendings = async () => {\n  return await axios\n    .get(`/trending/all/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const getMovieDetails = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const getMovieCast = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data.results);\n};\n\nexport const getMovieSearch = async movieQuery => {\n  return await axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`\n    )\n    .then(response => response.data.results);\n};\n"],"names":["ReviewElement","styled","Author","movieId","useParams","useState","reviews","setReviews","console","log","useEffect","getMovieReviews","then","review","catch","error","message","length","map","id","author","content","created_at","split","Suspense","fallback","Loader","axios","API_KEY","getMovieTrendings","response","data","getMovieDetails","getMovieCast","cast","results","getMovieSearch","movieQuery"],"sourceRoot":""}