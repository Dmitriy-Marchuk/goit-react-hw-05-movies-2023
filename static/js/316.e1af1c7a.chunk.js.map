{"version":3,"file":"static/js/316.e1af1c7a.chunk.js","mappings":"mQAEaA,EAAcC,EAAAA,GAAAA,GAAH,+QAYXC,EAAeD,EAAAA,GAAAA,IAAH,gEAKZE,EAAcF,EAAAA,GAAAA,EAAH,qE,mBCgCxB,EA7CkB,WAChB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACZ,IAEiB,IAAjBG,EAAMU,QAEN,+BACE,wCAMJ,UAACjB,EAAD,WACGO,GACCA,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,SAACpB,EAAD,CACEqB,IACED,EAzBU,kCA0BYA,EAxBlC,+DA2BUE,IAAKH,KAEP,SAAClB,EAAD,UAAckB,KACd,uBAAID,MAVGD,EADD,KAcZ,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,kMC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,8FAClBF,EAAAA,EAAAA,IAAA,oCACuBC,IACjClB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHe,mFAAH,qDAMjBC,EAAe,mCAAG,WAAM9B,GAAN,iFAChBwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,oBACuByB,EADvB,oBAEVlB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,IAAb,IAHa,mFAAH,sDAMftB,EAAY,mCAAG,WAAMN,GAAN,iFACbwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,4BAC+ByB,EAD/B,oBAEVlB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,KAAKG,IAAlB,IAHU,mFAAH,sDAMZC,EAAe,mCAAG,WAAMhC,GAAN,iFAChBwB,EAAAA,EAAAA,IAAA,iBACIxB,EADJ,4BAC+ByB,EAD/B,oBAEVlB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHa,mFAAH,sDAMfI,EAAc,mCAAG,WAAMC,GAAN,iFACfV,EAAAA,EAAAA,IAAA,gCAEgBC,EAFhB,iCAEgDS,EAFhD,gCAIV3B,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IALY,mFAAH,qD","sources":["components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ProfileList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 30px;\n  max-width: calc(100vw - 48px);\n  padding: 0 0 30px 0;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  list-style: none;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 150px;\n  border-radius: 5px;\n`;\n\nexport const NameProfile = styled.p`\n  font-weight: 500;\n  margin: 5px 0 2px 0;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { NameProfile, ProfileImage, ProfileList } from './MovieCast.styled';\nimport { getMovieCast } from 'services/api';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState('');\n  const profileImageUrl = 'https://image.tmdb.org/t/p/w500';\n  const PosterNotAvailable =\n    'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg';\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(setCasts)\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  if (casts.length === 0) {\n    return (\n      <>\n        <h1>No info!</h1>\n      </>\n    );\n  }\n\n  return (\n    <ProfileList>\n      {casts &&\n        casts.map(({ id, character, name, profile_path }) => (\n          <li key={id}>\n            <ProfileImage\n              src={\n                profile_path\n                  ? profileImageUrl + profile_path\n                  : PosterNotAvailable\n              }\n              alt={name}\n            />\n            <NameProfile>{name}</NameProfile>\n            <p>{character}</p>\n          </li>\n        ))}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </ProfileList>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fe4b88b6e68a30f89cb8b35af00ef551';\n\nexport const getMovieTrendings = async () => {\n  return await axios\n    .get(`/trending/all/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const getMovieDetails = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const getMovieCast = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data.results);\n};\n\nexport const getMovieSearch = async movieQuery => {\n  return await axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`\n    )\n    .then(response => response.data.results);\n};\n"],"names":["ProfileList","styled","ProfileImage","NameProfile","movieId","useParams","useState","casts","setCasts","useEffect","getMovieCast","then","catch","error","console","log","message","length","map","id","character","name","profile_path","src","alt","Suspense","fallback","Loader","axios","API_KEY","getMovieTrendings","response","data","results","getMovieDetails","cast","getMovieReviews","getMovieSearch","movieQuery"],"sourceRoot":""}